// Generated by CoffeeScript 1.10.0
(function() {
  var MessageHandler, channelManager, serviceManager, utils,
    slice = [].slice;

  utils = require('./utils');

  channelManager = require('./channelManager');

  serviceManager = require('./serviceManager');

  utils.registerClass(MessageHandler = (function() {
    function MessageHandler() {}

    MessageHandler.prototype.handleMessage = function(channel, message) {
      return this._serviceMethodInvoker(channel, message["interface"], message.method, message.args);
    };

    MessageHandler.prototype._serviceMethodInvoker = function(channel, intfName, method, args) {
      var e, error, methodSignature, service;
      methodSignature = intfName + "." + method + "()";
      service = serviceManager.get(intfName);
      if (!service) {
        return this._redirectToConnections(channel, intfName, method, args);
      }
      args = args.slice();
      args.unshift(channel);
      try {
        return service[method].apply(service, args);
      } catch (error) {
        e = error;
        utils.log("error running service method " + methodSignature + ": " + e);
        return utils.log("stack:\n" + e.stack);
      }
    };

    MessageHandler.prototype._redirectToConnections = function(channel, intfName, method, args) {
      var connection, i, len, ref, results;
      ref = channel.connections;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        connection = ref[i];
        results.push(connection.sendMessage.apply(connection, [intfName, method].concat(slice.call(args))));
      }
      return results;
    };

    return MessageHandler;

  })());

  module.exports = new MessageHandler;

}).call(this);

//# sourceMappingURL=messageHandler.js.map

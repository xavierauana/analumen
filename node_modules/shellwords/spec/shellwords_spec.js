// Generated by CoffeeScript 1.10.0
(function() {
  var shellwords;

  shellwords = require("../src/shellwords");

  describe("Shellwords", function() {
    describe("#split", function() {
      it("splits normal words", function() {
        var results;
        results = shellwords.split("foo bar baz");
        return (expect(results)).toEqual(["foo", "bar", "baz"]);
      });
      it("splits single quoted phrases", function() {
        var results;
        results = shellwords.split("foo 'bar baz'");
        return (expect(results)).toEqual(["foo", "bar baz"]);
      });
      it("splits double quoted phrases", function() {
        var results;
        results = shellwords.split('"foo bar" baz');
        return (expect(results)).toEqual(["foo bar", "baz"]);
      });
      it("respects escaped characters", function() {
        var results;
        results = shellwords.split("foo\\ bar baz");
        return (expect(results)).toEqual(["foo bar", "baz"]);
      });
      it("respects escaped characters within single quotes", function() {
        var results;
        results = shellwords.split("foo 'bar\\ baz'");
        return (expect(results)).toEqual(["foo", "bar baz"]);
      });
      it("respects escaped characters within double quotes", function() {
        var results;
        results = shellwords.split('foo "bar\\ baz"');
        return (expect(results)).toEqual(["foo", "bar baz"]);
      });
      it("respects escaped quotes within quotes", function() {
        var results;
        results = shellwords.split('foo "bar\\" baz"');
        (expect(results)).toEqual(['foo', 'bar" baz']);
        results = shellwords.split("foo 'bar\\' baz'");
        return (expect(results)).toEqual(["foo", "bar' baz"]);
      });
      it("throws on unmatched single quotes", function() {
        var fn;
        fn = function() {
          return shellwords.split("foo 'bar baz");
        };
        return (expect(fn)).toThrow();
      });
      return it("throws on unmatched double quotes", function() {
        var fn;
        fn = function() {
          return shellwords.split('foo "bar baz');
        };
        return (expect(fn)).toThrow();
      });
    });
    return describe("#escape", function() {
      it("escapes a string to be safe for shell command line", function() {
        var results;
        results = shellwords.escape("foo '\"' bar");
        return (expect(results)).toEqual("foo\\ \\'\\\"\\'\\ bar");
      });
      return it("dummy escapes any multibyte chars", function() {
        var results;
        results = shellwords.escape("あい");
        return (expect(results)).toEqual("\\あ\\い");
      });
    });
  });

}).call(this);

//# sourceMappingURL=shellwords_spec.js.map
